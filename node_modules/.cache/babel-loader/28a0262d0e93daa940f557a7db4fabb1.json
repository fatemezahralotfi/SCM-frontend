{"ast":null,"code":"/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n'use strict';\n\nvar interceptor, uriTemplate, mixin;\ninterceptor = require('../interceptor');\nuriTemplate = require('../util/uriTemplate');\nmixin = require('../util/mixin');\n/**\n * Applies request params to the path as a URI Template\n *\n * Params are removed from the request object, as they have been consumed.\n *\n * @see https://tools.ietf.org/html/rfc6570\n *\n * @param {Client} [client] client to wrap\n * @param {Object} [config.params] default param values\n * @param {string} [config.template] default template\n *\n * @returns {Client}\n */\n\nmodule.exports = interceptor({\n  init: function (config) {\n    config.params = config.params || {};\n    config.template = config.template || '';\n    return config;\n  },\n  request: function (request, config) {\n    var template, params;\n    template = request.path || config.template;\n    params = mixin({}, request.params, config.params);\n    request.path = uriTemplate.expand(template, params);\n    delete request.params;\n    return request;\n  }\n});","map":{"version":3,"sources":["/Users/fatemezahralotfi/IdeaProjects/SCM-frontend/node_modules/rest/interceptor/template.js"],"names":["interceptor","uriTemplate","mixin","require","module","exports","init","config","params","template","request","path","expand"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,WAAJ,EAAiBC,WAAjB,EAA8BC,KAA9B;AAEAF,WAAW,GAAGG,OAAO,CAAC,gBAAD,CAArB;AACAF,WAAW,GAAGE,OAAO,CAAC,qBAAD,CAArB;AACAD,KAAK,GAAGC,OAAO,CAAC,eAAD,CAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiBL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,UAAUC,MAAV,EAAkB;AACvBA,IAAAA,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,IAAiB,EAAjC;AACAD,IAAAA,MAAM,CAACE,QAAP,GAAkBF,MAAM,CAACE,QAAP,IAAmB,EAArC;AACA,WAAOF,MAAP;AACA,GAL2B;AAM5BG,EAAAA,OAAO,EAAE,UAAUA,OAAV,EAAmBH,MAAnB,EAA2B;AACnC,QAAIE,QAAJ,EAAcD,MAAd;AAEAC,IAAAA,QAAQ,GAAGC,OAAO,CAACC,IAAR,IAAgBJ,MAAM,CAACE,QAAlC;AACAD,IAAAA,MAAM,GAAGN,KAAK,CAAC,EAAD,EAAKQ,OAAO,CAACF,MAAb,EAAqBD,MAAM,CAACC,MAA5B,CAAd;AAEAE,IAAAA,OAAO,CAACC,IAAR,GAAeV,WAAW,CAACW,MAAZ,CAAmBH,QAAnB,EAA6BD,MAA7B,CAAf;AACA,WAAOE,OAAO,CAACF,MAAf;AAEA,WAAOE,OAAP;AACA;AAhB2B,CAAD,CAA5B","sourcesContent":["/*\n * Copyright 2015-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar interceptor, uriTemplate, mixin;\n\ninterceptor = require('../interceptor');\nuriTemplate = require('../util/uriTemplate');\nmixin = require('../util/mixin');\n\n/**\n * Applies request params to the path as a URI Template\n *\n * Params are removed from the request object, as they have been consumed.\n *\n * @see https://tools.ietf.org/html/rfc6570\n *\n * @param {Client} [client] client to wrap\n * @param {Object} [config.params] default param values\n * @param {string} [config.template] default template\n *\n * @returns {Client}\n */\nmodule.exports = interceptor({\n\tinit: function (config) {\n\t\tconfig.params = config.params || {};\n\t\tconfig.template = config.template || '';\n\t\treturn config;\n\t},\n\trequest: function (request, config) {\n\t\tvar template, params;\n\n\t\ttemplate = request.path || config.template;\n\t\tparams = mixin({}, request.params, config.params);\n\n\t\trequest.path = uriTemplate.expand(template, params);\n\t\tdelete request.params;\n\n\t\treturn request;\n\t}\n});\n"]},"metadata":{},"sourceType":"script"}