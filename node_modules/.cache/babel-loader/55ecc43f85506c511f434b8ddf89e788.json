{"ast":null,"code":"/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n'use strict';\n/*jshint latedef: nofunc */\n\nvar normalizeHeaderName = require('./normalizeHeaderName');\n\nfunction property(promise, name) {\n  return promise.then(function (value) {\n    return value && value[name];\n  }, function (value) {\n    return Promise.reject(value && value[name]);\n  });\n}\n/**\n * Obtain the response entity\n *\n * @returns {Promise} for the response entity\n */\n\n\nfunction entity() {\n  /*jshint validthis:true */\n  return property(this, 'entity');\n}\n/**\n * Obtain the response status\n *\n * @returns {Promise} for the response status\n */\n\n\nfunction status() {\n  /*jshint validthis:true */\n  return property(property(this, 'status'), 'code');\n}\n/**\n * Obtain the response headers map\n *\n * @returns {Promise} for the response headers map\n */\n\n\nfunction headers() {\n  /*jshint validthis:true */\n  return property(this, 'headers');\n}\n/**\n * Obtain a specific response header\n *\n * @param {String} headerName the header to retrieve\n * @returns {Promise} for the response header's value\n */\n\n\nfunction header(headerName) {\n  /*jshint validthis:true */\n  headerName = normalizeHeaderName(headerName);\n  return property(this.headers(), headerName);\n}\n/**\n * Follow a related resource\n *\n * The relationship to follow may be define as a plain string, an object\n * with the rel and params, or an array containing one or more entries\n * with the previous forms.\n *\n * Examples:\n *   response.follow('next')\n *\n *   response.follow({ rel: 'next', params: { pageSize: 100 } })\n *\n *   response.follow([\n *       { rel: 'items', params: { projection: 'noImages' } },\n *       'search',\n *       { rel: 'findByGalleryIsNull', params: { projection: 'noImages' } },\n *       'items'\n *   ])\n *\n * @param {String|Object|Array} rels one, or more, relationships to follow\n * @returns ResponsePromise<Response> related resource\n */\n\n\nfunction follow(rels) {\n  /*jshint validthis:true */\n  rels = [].concat(rels);\n  return make(rels.reduce(function (response, rel) {\n    return response.then(function (response) {\n      if (typeof rel === 'string') {\n        rel = {\n          rel: rel\n        };\n      }\n\n      if (typeof response.entity.clientFor !== 'function') {\n        throw new Error('Hypermedia response expected');\n      }\n\n      var client = response.entity.clientFor(rel.rel);\n      return client({\n        params: rel.params\n      });\n    });\n  }, this));\n}\n/**\n * Wrap a Promise as an ResponsePromise\n *\n * @param {Promise<Response>} promise the promise for an HTTP Response\n * @returns {ResponsePromise<Response>} wrapped promise for Response with additional helper methods\n */\n\n\nfunction make(promise) {\n  promise.status = status;\n  promise.headers = headers;\n  promise.header = header;\n  promise.entity = entity;\n  promise.follow = follow;\n  return promise;\n}\n\nfunction responsePromise(obj, callback, errback) {\n  return make(Promise.resolve(obj).then(callback, errback));\n}\n\nresponsePromise.make = make;\n\nresponsePromise.reject = function (val) {\n  return make(Promise.reject(val));\n};\n\nresponsePromise.promise = function (func) {\n  return make(new Promise(func));\n};\n\nmodule.exports = responsePromise;","map":{"version":3,"sources":["/Users/fatemezahralotfi/IdeaProjects/SCM-frontend/node_modules/rest/util/responsePromise.js"],"names":["normalizeHeaderName","require","property","promise","name","then","value","Promise","reject","entity","status","headers","header","headerName","follow","rels","concat","make","reduce","response","rel","clientFor","Error","client","params","responsePromise","obj","callback","errback","resolve","val","func","module","exports"],"mappings":"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","sourcesContent":["/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\n/*jshint latedef: nofunc */\n\nvar normalizeHeaderName = require('./normalizeHeaderName');\n\nfunction property(promise, name) {\n\treturn promise.then(\n\t\tfunction (value) {\n\t\t\treturn value && value[name];\n\t\t},\n\t\tfunction (value) {\n\t\t\treturn Promise.reject(value && value[name]);\n\t\t}\n\t);\n}\n\n/**\n * Obtain the response entity\n *\n * @returns {Promise} for the response entity\n */\nfunction entity() {\n\t/*jshint validthis:true */\n\treturn property(this, 'entity');\n}\n\n/**\n * Obtain the response status\n *\n * @returns {Promise} for the response status\n */\nfunction status() {\n\t/*jshint validthis:true */\n\treturn property(property(this, 'status'), 'code');\n}\n\n/**\n * Obtain the response headers map\n *\n * @returns {Promise} for the response headers map\n */\nfunction headers() {\n\t/*jshint validthis:true */\n\treturn property(this, 'headers');\n}\n\n/**\n * Obtain a specific response header\n *\n * @param {String} headerName the header to retrieve\n * @returns {Promise} for the response header's value\n */\nfunction header(headerName) {\n\t/*jshint validthis:true */\n\theaderName = normalizeHeaderName(headerName);\n\treturn property(this.headers(), headerName);\n}\n\n/**\n * Follow a related resource\n *\n * The relationship to follow may be define as a plain string, an object\n * with the rel and params, or an array containing one or more entries\n * with the previous forms.\n *\n * Examples:\n *   response.follow('next')\n *\n *   response.follow({ rel: 'next', params: { pageSize: 100 } })\n *\n *   response.follow([\n *       { rel: 'items', params: { projection: 'noImages' } },\n *       'search',\n *       { rel: 'findByGalleryIsNull', params: { projection: 'noImages' } },\n *       'items'\n *   ])\n *\n * @param {String|Object|Array} rels one, or more, relationships to follow\n * @returns ResponsePromise<Response> related resource\n */\nfunction follow(rels) {\n\t/*jshint validthis:true */\n\trels = [].concat(rels);\n\n\treturn make(rels.reduce(function (response, rel) {\n\t\treturn response.then(function (response) {\n\t\t\tif (typeof rel === 'string') {\n\t\t\t\trel = { rel: rel };\n\t\t\t}\n\t\t\tif (typeof response.entity.clientFor !== 'function') {\n\t\t\t\tthrow new Error('Hypermedia response expected');\n\t\t\t}\n\t\t\tvar client = response.entity.clientFor(rel.rel);\n\t\t\treturn client({ params: rel.params });\n\t\t});\n\t}, this));\n}\n\n/**\n * Wrap a Promise as an ResponsePromise\n *\n * @param {Promise<Response>} promise the promise for an HTTP Response\n * @returns {ResponsePromise<Response>} wrapped promise for Response with additional helper methods\n */\nfunction make(promise) {\n\tpromise.status = status;\n\tpromise.headers = headers;\n\tpromise.header = header;\n\tpromise.entity = entity;\n\tpromise.follow = follow;\n\treturn promise;\n}\n\nfunction responsePromise(obj, callback, errback) {\n\treturn make(Promise.resolve(obj).then(callback, errback));\n}\n\nresponsePromise.make = make;\nresponsePromise.reject = function (val) {\n\treturn make(Promise.reject(val));\n};\nresponsePromise.promise = function (func) {\n\treturn make(new Promise(func));\n};\n\nmodule.exports = responsePromise;\n"]},"metadata":{},"sourceType":"script"}