{"ast":null,"code":"/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Michael Jackson\n */\n\n/* global FormData, File, Blob */\n'use strict';\n\nfunction isFormElement(object) {\n  return object && object.nodeType === 1 && // Node.ELEMENT_NODE\n  object.tagName === 'FORM';\n}\n\nfunction createFormDataFromObject(object) {\n  var formData = new FormData();\n  var value;\n\n  for (var property in object) {\n    if (object.hasOwnProperty(property)) {\n      value = object[property];\n\n      if (value instanceof File) {\n        formData.append(property, value, value.name);\n      } else if (value instanceof Blob) {\n        formData.append(property, value);\n      } else {\n        formData.append(property, String(value));\n      }\n    }\n  }\n\n  return formData;\n}\n\nmodule.exports = {\n  write: function (object) {\n    if (typeof FormData === 'undefined') {\n      throw new Error('The multipart/form-data mime serializer requires FormData support');\n    } // Support FormData directly.\n\n\n    if (object instanceof FormData) {\n      return object;\n    } // Support <form> elements.\n\n\n    if (isFormElement(object)) {\n      return new FormData(object);\n    } // Support plain objects, may contain File/Blob as value.\n\n\n    if (typeof object === 'object' && object !== null) {\n      return createFormDataFromObject(object);\n    }\n\n    throw new Error('Unable to create FormData from object ' + object);\n  }\n};","map":{"version":3,"sources":["/Users/fatemezahralotfi/IdeaProjects/SCM-frontend/node_modules/rest/mime/type/multipart/form-data.js"],"names":["isFormElement","object","nodeType","tagName","createFormDataFromObject","formData","FormData","value","property","hasOwnProperty","File","append","name","Blob","String","module","exports","write","Error"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAEA;;AAEA,SAASA,aAAT,CAAuBC,MAAvB,EAA+B;AAC9B,SAAOA,MAAM,IACZA,MAAM,CAACC,QAAP,KAAoB,CADd,IACmB;AACzBD,EAAAA,MAAM,CAACE,OAAP,KAAmB,MAFpB;AAGA;;AAED,SAASC,wBAAT,CAAkCH,MAAlC,EAA0C;AACzC,MAAII,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEA,MAAIC,KAAJ;;AACA,OAAK,IAAIC,QAAT,IAAqBP,MAArB,EAA6B;AAC5B,QAAIA,MAAM,CAACQ,cAAP,CAAsBD,QAAtB,CAAJ,EAAqC;AACpCD,MAAAA,KAAK,GAAGN,MAAM,CAACO,QAAD,CAAd;;AAEA,UAAID,KAAK,YAAYG,IAArB,EAA2B;AAC1BL,QAAAA,QAAQ,CAACM,MAAT,CAAgBH,QAAhB,EAA0BD,KAA1B,EAAiCA,KAAK,CAACK,IAAvC;AACA,OAFD,MAEO,IAAIL,KAAK,YAAYM,IAArB,EAA2B;AACjCR,QAAAA,QAAQ,CAACM,MAAT,CAAgBH,QAAhB,EAA0BD,KAA1B;AACA,OAFM,MAEA;AACNF,QAAAA,QAAQ,CAACM,MAAT,CAAgBH,QAAhB,EAA0BM,MAAM,CAACP,KAAD,CAAhC;AACA;AACD;AACD;;AAED,SAAOF,QAAP;AACA;;AAEDU,MAAM,CAACC,OAAP,GAAiB;AAEhBC,EAAAA,KAAK,EAAE,UAAUhB,MAAV,EAAkB;AACxB,QAAI,OAAOK,QAAP,KAAoB,WAAxB,EAAqC;AACpC,YAAM,IAAIY,KAAJ,CAAU,mEAAV,CAAN;AACA,KAHuB,CAKxB;;;AACA,QAAIjB,MAAM,YAAYK,QAAtB,EAAgC;AAC/B,aAAOL,MAAP;AACA,KARuB,CAUxB;;;AACA,QAAID,aAAa,CAACC,MAAD,CAAjB,EAA2B;AAC1B,aAAO,IAAIK,QAAJ,CAAaL,MAAb,CAAP;AACA,KAbuB,CAexB;;;AACA,QAAI,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,KAAK,IAA7C,EAAmD;AAClD,aAAOG,wBAAwB,CAACH,MAAD,CAA/B;AACA;;AAED,UAAM,IAAIiB,KAAJ,CAAU,2CAA2CjB,MAArD,CAAN;AACA;AAvBe,CAAjB","sourcesContent":["/*\n * Copyright 2014-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Michael Jackson\n */\n\n/* global FormData, File, Blob */\n\n'use strict';\n\nfunction isFormElement(object) {\n\treturn object &&\n\t\tobject.nodeType === 1 && // Node.ELEMENT_NODE\n\t\tobject.tagName === 'FORM';\n}\n\nfunction createFormDataFromObject(object) {\n\tvar formData = new FormData();\n\n\tvar value;\n\tfor (var property in object) {\n\t\tif (object.hasOwnProperty(property)) {\n\t\t\tvalue = object[property];\n\n\t\t\tif (value instanceof File) {\n\t\t\t\tformData.append(property, value, value.name);\n\t\t\t} else if (value instanceof Blob) {\n\t\t\t\tformData.append(property, value);\n\t\t\t} else {\n\t\t\t\tformData.append(property, String(value));\n\t\t\t}\n\t\t}\n\t}\n\n\treturn formData;\n}\n\nmodule.exports = {\n\n\twrite: function (object) {\n\t\tif (typeof FormData === 'undefined') {\n\t\t\tthrow new Error('The multipart/form-data mime serializer requires FormData support');\n\t\t}\n\n\t\t// Support FormData directly.\n\t\tif (object instanceof FormData) {\n\t\t\treturn object;\n\t\t}\n\n\t\t// Support <form> elements.\n\t\tif (isFormElement(object)) {\n\t\t\treturn new FormData(object);\n\t\t}\n\n\t\t// Support plain objects, may contain File/Blob as value.\n\t\tif (typeof object === 'object' && object !== null) {\n\t\t\treturn createFormDataFromObject(object);\n\t\t}\n\n\t\tthrow new Error('Unable to create FormData from object ' + object);\n\t}\n\n};\n"]},"metadata":{},"sourceType":"script"}