{"ast":null,"code":"/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n'use strict';\n\nvar normalizeHeaderName, responsePromise, client, headerSplitRE;\nnormalizeHeaderName = require('../util/normalizeHeaderName');\nresponsePromise = require('../util/responsePromise');\nclient = require('../client'); // according to the spec, the line break is '\\r\\n', but doesn't hold true in practice\n\nheaderSplitRE = /[\\r|\\n]+/;\n\nfunction parseHeaders(raw) {\n  // Note: Set-Cookie will be removed by the browser\n  var headers = {};\n\n  if (!raw) {\n    return headers;\n  }\n\n  raw.trim().split(headerSplitRE).forEach(function (header) {\n    var boundary, name, value;\n    boundary = header.indexOf(':');\n    name = normalizeHeaderName(header.substring(0, boundary).trim());\n    value = header.substring(boundary + 1).trim();\n\n    if (headers[name]) {\n      if (Array.isArray(headers[name])) {\n        // add to an existing array\n        headers[name].push(value);\n      } else {\n        // convert single value to array\n        headers[name] = [headers[name], value];\n      }\n    } else {\n      // new, single value\n      headers[name] = value;\n    }\n  });\n  return headers;\n}\n\nfunction safeMixin(target, source) {\n  Object.keys(source || {}).forEach(function (prop) {\n    // make sure the property already exists as\n    // IE 6 will blow up if we add a new prop\n    if (source.hasOwnProperty(prop) && prop in target) {\n      try {\n        target[prop] = source[prop];\n      } catch (e) {// ignore, expected for some properties at some points in the request lifecycle\n      }\n    }\n  });\n  return target;\n}\n\nmodule.exports = client(function xhr(request) {\n  return responsePromise.promise(function (resolve, reject) {\n    /*jshint maxcomplexity:20 */\n    var client, method, url, headers, entity, headerName, response, XHR;\n    request = typeof request === 'string' ? {\n      path: request\n    } : request || {};\n    response = {\n      request: request\n    };\n\n    if (request.canceled) {\n      response.error = 'precanceled';\n      reject(response);\n      return;\n    }\n\n    XHR = request.engine || XMLHttpRequest;\n\n    if (!XHR) {\n      reject({\n        request: request,\n        error: 'xhr-not-available'\n      });\n      return;\n    }\n\n    entity = request.entity;\n    request.method = request.method || (entity ? 'POST' : 'GET');\n    method = request.method;\n    url = response.url = request.path || '';\n\n    try {\n      client = response.raw = new XHR(); // mixin extra request properties before and after opening the request as some properties require being set at different phases of the request\n\n      safeMixin(client, request.mixin);\n      client.open(method, url, true);\n      safeMixin(client, request.mixin);\n      headers = request.headers;\n\n      for (headerName in headers) {\n        /*jshint forin:false */\n        if (headerName === 'Content-Type' && headers[headerName] === 'multipart/form-data') {\n          // XMLHttpRequest generates its own Content-Type header with the\n          // appropriate multipart boundary when sending multipart/form-data.\n          continue;\n        }\n\n        client.setRequestHeader(headerName, headers[headerName]);\n      }\n\n      request.canceled = false;\n\n      request.cancel = function cancel() {\n        request.canceled = true;\n        client.abort();\n        reject(response);\n      };\n\n      client.onreadystatechange = function () {\n        if (request.canceled) {\n          return;\n        }\n\n        if (client.readyState === (XHR.DONE || 4)) {\n          response.status = {\n            code: client.status,\n            text: client.statusText\n          };\n          response.headers = parseHeaders(client.getAllResponseHeaders());\n          response.entity = client.responseText; // #125 -- Sometimes IE8-9 uses 1223 instead of 204\n          // http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\n          if (response.status.code === 1223) {\n            response.status.code = 204;\n          }\n\n          if (response.status.code > 0) {\n            // check status code as readystatechange fires before error event\n            resolve(response);\n          } else {\n            // give the error callback a chance to fire before resolving\n            // requests for file:// URLs do not have a status code\n            setTimeout(function () {\n              resolve(response);\n            }, 0);\n          }\n        }\n      };\n\n      try {\n        client.onerror = function () {\n          response.error = 'loaderror';\n          reject(response);\n        };\n      } catch (e) {// IE 6 will not support error handling\n      }\n\n      client.send(entity);\n    } catch (e) {\n      response.error = 'loaderror';\n      reject(response);\n    }\n  });\n});","map":{"version":3,"sources":["/Users/fatemezahralotfi/IdeaProjects/SCM-frontend/node_modules/rest/client/xhr.js"],"names":["normalizeHeaderName","responsePromise","client","headerSplitRE","require","parseHeaders","raw","headers","trim","split","forEach","header","boundary","name","value","indexOf","substring","Array","isArray","push","safeMixin","target","source","Object","keys","prop","hasOwnProperty","e","module","exports","xhr","request","promise","resolve","reject","method","url","entity","headerName","response","XHR","path","canceled","error","engine","XMLHttpRequest","mixin","open","setRequestHeader","cancel","abort","onreadystatechange","readyState","DONE","status","code","text","statusText","getAllResponseHeaders","responseText","setTimeout","onerror","send"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA,IAAIA,mBAAJ,EAAyBC,eAAzB,EAA0CC,MAA1C,EAAkDC,aAAlD;AAEAH,mBAAmB,GAAGI,OAAO,CAAC,6BAAD,CAA7B;AACAH,eAAe,GAAGG,OAAO,CAAC,yBAAD,CAAzB;AACAF,MAAM,GAAGE,OAAO,CAAC,WAAD,CAAhB,C,CAEA;;AACAD,aAAa,GAAG,UAAhB;;AAEA,SAASE,YAAT,CAAsBC,GAAtB,EAA2B;AAC1B;AACA,MAAIC,OAAO,GAAG,EAAd;;AAEA,MAAI,CAACD,GAAL,EAAU;AAAE,WAAOC,OAAP;AAAiB;;AAE7BD,EAAAA,GAAG,CAACE,IAAJ,GAAWC,KAAX,CAAiBN,aAAjB,EAAgCO,OAAhC,CAAwC,UAAUC,MAAV,EAAkB;AACzD,QAAIC,QAAJ,EAAcC,IAAd,EAAoBC,KAApB;AACAF,IAAAA,QAAQ,GAAGD,MAAM,CAACI,OAAP,CAAe,GAAf,CAAX;AACAF,IAAAA,IAAI,GAAGb,mBAAmB,CAACW,MAAM,CAACK,SAAP,CAAiB,CAAjB,EAAoBJ,QAApB,EAA8BJ,IAA9B,EAAD,CAA1B;AACAM,IAAAA,KAAK,GAAGH,MAAM,CAACK,SAAP,CAAiBJ,QAAQ,GAAG,CAA5B,EAA+BJ,IAA/B,EAAR;;AACA,QAAID,OAAO,CAACM,IAAD,CAAX,EAAmB;AAClB,UAAII,KAAK,CAACC,OAAN,CAAcX,OAAO,CAACM,IAAD,CAArB,CAAJ,EAAkC;AACjC;AACAN,QAAAA,OAAO,CAACM,IAAD,CAAP,CAAcM,IAAd,CAAmBL,KAAnB;AACA,OAHD,MAIK;AACJ;AACAP,QAAAA,OAAO,CAACM,IAAD,CAAP,GAAgB,CAACN,OAAO,CAACM,IAAD,CAAR,EAAgBC,KAAhB,CAAhB;AACA;AACD,KATD,MAUK;AACJ;AACAP,MAAAA,OAAO,CAACM,IAAD,CAAP,GAAgBC,KAAhB;AACA;AACD,GAnBD;AAqBA,SAAOP,OAAP;AACA;;AAED,SAASa,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmC;AAClCC,EAAAA,MAAM,CAACC,IAAP,CAAYF,MAAM,IAAI,EAAtB,EAA0BZ,OAA1B,CAAkC,UAAUe,IAAV,EAAgB;AACjD;AACA;AACA,QAAIH,MAAM,CAACI,cAAP,CAAsBD,IAAtB,KAA+BA,IAAI,IAAIJ,MAA3C,EAAmD;AAClD,UAAI;AACHA,QAAAA,MAAM,CAACI,IAAD,CAAN,GAAeH,MAAM,CAACG,IAAD,CAArB;AACA,OAFD,CAGA,OAAOE,CAAP,EAAU,CACT;AACA;AACD;AACD,GAXD;AAaA,SAAON,MAAP;AACA;;AAEDO,MAAM,CAACC,OAAP,GAAiB3B,MAAM,CAAC,SAAS4B,GAAT,CAAaC,OAAb,EAAsB;AAC7C,SAAO9B,eAAe,CAAC+B,OAAhB,CAAwB,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACzD;AAEA,QAAIhC,MAAJ,EAAYiC,MAAZ,EAAoBC,GAApB,EAAyB7B,OAAzB,EAAkC8B,MAAlC,EAA0CC,UAA1C,EAAsDC,QAAtD,EAAgEC,GAAhE;AAEAT,IAAAA,OAAO,GAAG,OAAOA,OAAP,KAAmB,QAAnB,GAA8B;AAAEU,MAAAA,IAAI,EAAEV;AAAR,KAA9B,GAAkDA,OAAO,IAAI,EAAvE;AACAQ,IAAAA,QAAQ,GAAG;AAAER,MAAAA,OAAO,EAAEA;AAAX,KAAX;;AAEA,QAAIA,OAAO,CAACW,QAAZ,EAAsB;AACrBH,MAAAA,QAAQ,CAACI,KAAT,GAAiB,aAAjB;AACAT,MAAAA,MAAM,CAACK,QAAD,CAAN;AACA;AACA;;AAEDC,IAAAA,GAAG,GAAGT,OAAO,CAACa,MAAR,IAAkBC,cAAxB;;AACA,QAAI,CAACL,GAAL,EAAU;AACTN,MAAAA,MAAM,CAAC;AAAEH,QAAAA,OAAO,EAAEA,OAAX;AAAoBY,QAAAA,KAAK,EAAE;AAA3B,OAAD,CAAN;AACA;AACA;;AAEDN,IAAAA,MAAM,GAAGN,OAAO,CAACM,MAAjB;AACAN,IAAAA,OAAO,CAACI,MAAR,GAAiBJ,OAAO,CAACI,MAAR,KAAmBE,MAAM,GAAG,MAAH,GAAY,KAArC,CAAjB;AACAF,IAAAA,MAAM,GAAGJ,OAAO,CAACI,MAAjB;AACAC,IAAAA,GAAG,GAAGG,QAAQ,CAACH,GAAT,GAAeL,OAAO,CAACU,IAAR,IAAgB,EAArC;;AAEA,QAAI;AACHvC,MAAAA,MAAM,GAAGqC,QAAQ,CAACjC,GAAT,GAAe,IAAIkC,GAAJ,EAAxB,CADG,CAGH;;AACApB,MAAAA,SAAS,CAAClB,MAAD,EAAS6B,OAAO,CAACe,KAAjB,CAAT;AACA5C,MAAAA,MAAM,CAAC6C,IAAP,CAAYZ,MAAZ,EAAoBC,GAApB,EAAyB,IAAzB;AACAhB,MAAAA,SAAS,CAAClB,MAAD,EAAS6B,OAAO,CAACe,KAAjB,CAAT;AAEAvC,MAAAA,OAAO,GAAGwB,OAAO,CAACxB,OAAlB;;AACA,WAAK+B,UAAL,IAAmB/B,OAAnB,EAA4B;AAC3B;AACA,YAAI+B,UAAU,KAAK,cAAf,IAAiC/B,OAAO,CAAC+B,UAAD,CAAP,KAAwB,qBAA7D,EAAoF;AACnF;AACA;AACA;AACA;;AAEDpC,QAAAA,MAAM,CAAC8C,gBAAP,CAAwBV,UAAxB,EAAoC/B,OAAO,CAAC+B,UAAD,CAA3C;AACA;;AAEDP,MAAAA,OAAO,CAACW,QAAR,GAAmB,KAAnB;;AACAX,MAAAA,OAAO,CAACkB,MAAR,GAAiB,SAASA,MAAT,GAAkB;AAClClB,QAAAA,OAAO,CAACW,QAAR,GAAmB,IAAnB;AACAxC,QAAAA,MAAM,CAACgD,KAAP;AACAhB,QAAAA,MAAM,CAACK,QAAD,CAAN;AACA,OAJD;;AAMArC,MAAAA,MAAM,CAACiD,kBAAP,GAA4B,YAAmB;AAC9C,YAAIpB,OAAO,CAACW,QAAZ,EAAsB;AAAE;AAAS;;AACjC,YAAIxC,MAAM,CAACkD,UAAP,MAAuBZ,GAAG,CAACa,IAAJ,IAAY,CAAnC,CAAJ,EAA2C;AAC1Cd,UAAAA,QAAQ,CAACe,MAAT,GAAkB;AACjBC,YAAAA,IAAI,EAAErD,MAAM,CAACoD,MADI;AAEjBE,YAAAA,IAAI,EAAEtD,MAAM,CAACuD;AAFI,WAAlB;AAIAlB,UAAAA,QAAQ,CAAChC,OAAT,GAAmBF,YAAY,CAACH,MAAM,CAACwD,qBAAP,EAAD,CAA/B;AACAnB,UAAAA,QAAQ,CAACF,MAAT,GAAkBnC,MAAM,CAACyD,YAAzB,CAN0C,CAQ1C;AACA;;AACA,cAAIpB,QAAQ,CAACe,MAAT,CAAgBC,IAAhB,KAAyB,IAA7B,EAAmC;AAClChB,YAAAA,QAAQ,CAACe,MAAT,CAAgBC,IAAhB,GAAuB,GAAvB;AACA;;AAED,cAAIhB,QAAQ,CAACe,MAAT,CAAgBC,IAAhB,GAAuB,CAA3B,EAA8B;AAC7B;AACAtB,YAAAA,OAAO,CAACM,QAAD,CAAP;AACA,WAHD,MAIK;AACJ;AACA;AACAqB,YAAAA,UAAU,CAAC,YAAY;AACtB3B,cAAAA,OAAO,CAACM,QAAD,CAAP;AACA,aAFS,EAEP,CAFO,CAAV;AAGA;AACD;AACD,OA5BD;;AA8BA,UAAI;AACHrC,QAAAA,MAAM,CAAC2D,OAAP,GAAiB,YAAmB;AACnCtB,UAAAA,QAAQ,CAACI,KAAT,GAAiB,WAAjB;AACAT,UAAAA,MAAM,CAACK,QAAD,CAAN;AACA,SAHD;AAIA,OALD,CAMA,OAAOZ,CAAP,EAAU,CACT;AACA;;AAEDzB,MAAAA,MAAM,CAAC4D,IAAP,CAAYzB,MAAZ;AACA,KApED,CAqEA,OAAOV,CAAP,EAAU;AACTY,MAAAA,QAAQ,CAACI,KAAT,GAAiB,WAAjB;AACAT,MAAAA,MAAM,CAACK,QAAD,CAAN;AACA;AAED,GAnGM,CAAP;AAoGA,CArGsB,CAAvB","sourcesContent":["/*\n * Copyright 2012-2016 the original author or authors\n * @license MIT, see LICENSE.txt for details\n *\n * @author Scott Andrews\n */\n\n'use strict';\n\nvar normalizeHeaderName, responsePromise, client, headerSplitRE;\n\nnormalizeHeaderName = require('../util/normalizeHeaderName');\nresponsePromise = require('../util/responsePromise');\nclient = require('../client');\n\n// according to the spec, the line break is '\\r\\n', but doesn't hold true in practice\nheaderSplitRE = /[\\r|\\n]+/;\n\nfunction parseHeaders(raw) {\n\t// Note: Set-Cookie will be removed by the browser\n\tvar headers = {};\n\n\tif (!raw) { return headers; }\n\n\traw.trim().split(headerSplitRE).forEach(function (header) {\n\t\tvar boundary, name, value;\n\t\tboundary = header.indexOf(':');\n\t\tname = normalizeHeaderName(header.substring(0, boundary).trim());\n\t\tvalue = header.substring(boundary + 1).trim();\n\t\tif (headers[name]) {\n\t\t\tif (Array.isArray(headers[name])) {\n\t\t\t\t// add to an existing array\n\t\t\t\theaders[name].push(value);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// convert single value to array\n\t\t\t\theaders[name] = [headers[name], value];\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// new, single value\n\t\t\theaders[name] = value;\n\t\t}\n\t});\n\n\treturn headers;\n}\n\nfunction safeMixin(target, source) {\n\tObject.keys(source || {}).forEach(function (prop) {\n\t\t// make sure the property already exists as\n\t\t// IE 6 will blow up if we add a new prop\n\t\tif (source.hasOwnProperty(prop) && prop in target) {\n\t\t\ttry {\n\t\t\t\ttarget[prop] = source[prop];\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// ignore, expected for some properties at some points in the request lifecycle\n\t\t\t}\n\t\t}\n\t});\n\n\treturn target;\n}\n\nmodule.exports = client(function xhr(request) {\n\treturn responsePromise.promise(function (resolve, reject) {\n\t\t/*jshint maxcomplexity:20 */\n\n\t\tvar client, method, url, headers, entity, headerName, response, XHR;\n\n\t\trequest = typeof request === 'string' ? { path: request } : request || {};\n\t\tresponse = { request: request };\n\n\t\tif (request.canceled) {\n\t\t\tresponse.error = 'precanceled';\n\t\t\treject(response);\n\t\t\treturn;\n\t\t}\n\n\t\tXHR = request.engine || XMLHttpRequest;\n\t\tif (!XHR) {\n\t\t\treject({ request: request, error: 'xhr-not-available' });\n\t\t\treturn;\n\t\t}\n\n\t\tentity = request.entity;\n\t\trequest.method = request.method || (entity ? 'POST' : 'GET');\n\t\tmethod = request.method;\n\t\turl = response.url = request.path || '';\n\n\t\ttry {\n\t\t\tclient = response.raw = new XHR();\n\n\t\t\t// mixin extra request properties before and after opening the request as some properties require being set at different phases of the request\n\t\t\tsafeMixin(client, request.mixin);\n\t\t\tclient.open(method, url, true);\n\t\t\tsafeMixin(client, request.mixin);\n\n\t\t\theaders = request.headers;\n\t\t\tfor (headerName in headers) {\n\t\t\t\t/*jshint forin:false */\n\t\t\t\tif (headerName === 'Content-Type' && headers[headerName] === 'multipart/form-data') {\n\t\t\t\t\t// XMLHttpRequest generates its own Content-Type header with the\n\t\t\t\t\t// appropriate multipart boundary when sending multipart/form-data.\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tclient.setRequestHeader(headerName, headers[headerName]);\n\t\t\t}\n\n\t\t\trequest.canceled = false;\n\t\t\trequest.cancel = function cancel() {\n\t\t\t\trequest.canceled = true;\n\t\t\t\tclient.abort();\n\t\t\t\treject(response);\n\t\t\t};\n\n\t\t\tclient.onreadystatechange = function (/* e */) {\n\t\t\t\tif (request.canceled) { return; }\n\t\t\t\tif (client.readyState === (XHR.DONE || 4)) {\n\t\t\t\t\tresponse.status = {\n\t\t\t\t\t\tcode: client.status,\n\t\t\t\t\t\ttext: client.statusText\n\t\t\t\t\t};\n\t\t\t\t\tresponse.headers = parseHeaders(client.getAllResponseHeaders());\n\t\t\t\t\tresponse.entity = client.responseText;\n\n\t\t\t\t\t// #125 -- Sometimes IE8-9 uses 1223 instead of 204\n\t\t\t\t\t// http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t\t\t\t\tif (response.status.code === 1223) {\n\t\t\t\t\t\tresponse.status.code = 204;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (response.status.code > 0) {\n\t\t\t\t\t\t// check status code as readystatechange fires before error event\n\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// give the error callback a chance to fire before resolving\n\t\t\t\t\t\t// requests for file:// URLs do not have a status code\n\t\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\t\tresolve(response);\n\t\t\t\t\t\t}, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\ttry {\n\t\t\t\tclient.onerror = function (/* e */) {\n\t\t\t\t\tresponse.error = 'loaderror';\n\t\t\t\t\treject(response);\n\t\t\t\t};\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// IE 6 will not support error handling\n\t\t\t}\n\n\t\t\tclient.send(entity);\n\t\t}\n\t\tcatch (e) {\n\t\t\tresponse.error = 'loaderror';\n\t\t\treject(response);\n\t\t}\n\n\t});\n});\n"]},"metadata":{},"sourceType":"script"}